{"version":3,"file":"editor.worker.js","mappings":"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","sources":["webpack://code-editor/./node_modules/process/browser.js","webpack://code-editor/webpack/bootstrap","webpack://code-editor/webpack/runtime/global","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack://code-editor/./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = (function defineSetImmediate() {\n    if (globals.setImmediate) {\n        return globals.setImmediate.bind(globals);\n    }\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeSetImmediateId) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\n        };\n    }\n    if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n        return nodeProcess.nextTick.bind(nodeProcess);\n    }\n    const _promise = Promise.resolve();\n    return (callback) => _promise.then(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as types from '../types.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        let req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send({\n                vsWorker: this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        if (msg.seq) {\n            let replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            let reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                let err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        let requestMessage = msg;\n        let req = requestMessage.req;\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send({\n                vsWorker: this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send({\n                vsWorker: this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    }\n    _send(msg) {\n        let transfer = [];\n        if (msg.req) {\n            const m = msg;\n            for (let i = 0; i < m.args.length; i++) {\n                if (m.args[i] instanceof ArrayBuffer) {\n                    transfer.push(m.args[i]);\n                }\n            }\n        }\n        else {\n            const m = msg;\n            if (m.res instanceof ArrayBuffer) {\n                transfer.push(m.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        const hostMethods = types.getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(types.getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        const diff = codeA - codeB;\n        if (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n            continue;\n        }\n        else if (diff === -32 && isUpperAsciiLetter(codeA)) { //codeB =[97-122] && codeA =[65-90]\n            continue;\n        }\n        if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt = a.length) {\n    for (let i = 0; i < stopAt; i++) {\n        const codeA = a.charCodeAt(i);\n        const codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            const diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport function nextCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const len = str.length;\n    const initialCodePoint = getNextCodePoint(str, len, offset);\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset < len) {\n        const nextCodePoint = getNextCodePoint(str, len, offset);\n        const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n            break;\n        }\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = nextGraphemeBreakType;\n    }\n    return (offset - initialOffset);\n}\nexport function prevCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const initialCodePoint = getPrevCodePoint(str, offset);\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset > 0) {\n        const prevCodePoint = getPrevCodePoint(str, offset);\n        const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n            break;\n        }\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = prevGraphemeBreakType;\n    }\n    return (initialOffset - offset);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129750));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    return offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(offset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    let codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = getPrevCodePoint(str, offset);\n        offset -= getUTF16Length(codePoint);\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    if (offset >= 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = getPrevCodePoint(str, offset);\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            offset -= getUTF16Length(optionalZwjCodePoint);\n        }\n    }\n    return offset;\n}\nfunction getUTF16Length(codePoint) {\n    return codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexport class MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            let mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        let mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows, setImmediate } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); },\n        nextTick(callback) { return setImmediate(callback); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n        nextTick(callback) { return process.nextTick(callback); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        nextTick(callback) { return setImmediate(callback); },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        let aLineNumber = a.lineNumber | 0;\n        let bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            let aColumn = a.column | 0;\n            let bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        return this._columns[i];\n    }\n    getEndLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getEndColumn(i) {\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        let originalStartLineNumber;\n        let originalStartColumn;\n        let originalEndLineNumber;\n        let originalEndColumn;\n        let modifiedStartLineNumber;\n        let modifiedStartColumn;\n        let modifiedEndLineNumber;\n        let modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    changeValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        let maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        let insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        let newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        let result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        let defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        let asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        let value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        let result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 42 /* Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 124 /* Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 32 /* Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    let chClass;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            let result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            let result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        let numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        let n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function map(event, map) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n    }\n    Event.map = map;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function forEach(event, each) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function reduce(event, merge, initial) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function snapshot(event) {\n        let listener;\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const emitter = new Emitter({\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function latch(event, equals = (a, b) => a === b) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function split(event, isT) {\n        return [\n            Event.filter(event, isT),\n            Event.filter(event, e => !isT(e)),\n        ];\n    }\n    Event.split = split;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function buffer(event, nextTick = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        const count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack) || 0);\n            this._stacks.set(stack, count - 1);\n        };\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                var _a;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && this._options && this._options.onFirstListenerAdd) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if (this._options && this._options.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, listener, thisArgs);\n                }\n                // check and record this emitter for potential leakage\n                const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n                const result = toDisposable(() => {\n                    if (removeMonitor) {\n                        removeMonitor();\n                    }\n                    if (!this._disposed) {\n                        remove();\n                        if (this._options && this._options.onLastListenerRemove) {\n                            const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                            if (!hasListeners) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                });\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event);\n                    }\n                    else {\n                        listener[0].call(listener[1], event);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n    dispose() {\n        var _a, _b, _c, _d, _e;\n        if (!this._disposed) {\n            this._disposed = true;\n            (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n            (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onLastListenerRemove) === null || _d === void 0 ? void 0 : _d.call(_c);\n            (_e = this._leakageMon) === null || _e === void 0 ? void 0 : _e.dispose();\n        }\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel = uiLabel, generalUserSettingsLabel = usUserSettingsLabel) {\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    }\n    toChord() {\n        return new ChordKeybinding([this]);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    }\n}\nexport class ChordKeybinding {\n    constructor(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(`parts`);\n        }\n        this.parts = parts;\n    }\n}\nexport class ResolvedKeybindingPart {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport class ResolvedKeybinding {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 12] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 13] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 14] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 15] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 16] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 17] = \"colorDecorators\";\n    EditorOption[EditorOption[\"columnSelection\"] = 18] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 19] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 20] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 21] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 22] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 23] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 24] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 25] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 26] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 27] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 28] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 29] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 30] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 31] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 32] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 33] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 34] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 35] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 36] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 37] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 38] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 39] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 40] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 41] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 42] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 43] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 44] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 45] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 46] = \"fontWeight\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 47] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 48] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 49] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 50] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 51] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 52] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 53] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 54] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 55] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 56] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 57] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 58] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 59] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 60] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 61] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 62] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 63] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 64] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 65] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 66] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 67] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 68] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 69] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 70] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 71] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 72] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 73] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 74] = \"padding\";\n    EditorOption[EditorOption[\"parameterHints\"] = 75] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 76] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 77] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 78] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 79] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 80] = \"readOnly\";\n    EditorOption[EditorOption[\"renameOnType\"] = 81] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 82] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        let content = this._lines[lineNumber - 1];\n        let ranges = this._wordenize(content, wordDefinition);\n        let words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let lineEnding = this._eol;\n        let startLineIndex = range.startLineNumber - 1;\n        let endLineIndex = range.endLineNumber - 1;\n        let resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        let out = this._lineStarts.getIndexOf(offset);\n        let lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        let all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        let model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            const originalLines = original.getLinesContent();\n            const modifiedLines = modified.getLinesContent();\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true,\n                maxComputationTime: maxComputationTime\n            });\n            const diffResult = diffComputer.computeDiff();\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return {\n                quitEarly: diffResult.quitEarly,\n                identical: identical,\n                changes: diffResult.changes\n            };\n        });\n    }\n    _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                let aRng = a.range ? 0 : 1;\n                let bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, false);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch(true);\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (let url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (let word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                let words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            let selectionText = model.getValueInRange(range);\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            let word = model.getValueInRange(wordRange);\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n        let ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n    constructor(offset, type, language) {\n        this._tokenBrand = undefined;\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this._tokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\nexport class TokenizationResult2 {\n    constructor(tokens, endState) {\n        this._tokenizationResult2Brand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        self.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    self.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","g","globalThis","Function","window","errorHandler","constructor","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","onUnexpectedExternalError","error","canceledName","transformErrorForSerialization","$isError","stacktrace","NotSupportedError","super","fn","_this","result","didCall","Iterable","is","thing","Symbol","iterator","_empty","Object","freeze","empty","single","element","from","iterable","isEmpty","next","done","first","value","some","predicate","find","filter","map","index","iterables","concatNested","reduce","reducer","initialValue","slice","arr","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","equals","a","b","comparator","at","bt","ai","bi","an","bn","MultiDisposeError","errors","join","dispose","arg","d","isArray","toDisposable","self","DisposableStore","_toDispose","Set","_isDisposed","clear","values","add","o","DISABLE_DISPOSED_WARNING","console","warn","_store","_register","None","_a","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_language","_translationsConfigFile","globals","nodeProcess","vscode","isElectronRenderer","electron","type","navigator","platform","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","indexOf","maxTouchPoints","language","_platform","isWindows","isMacintosh","setImmediate","bind","postMessage","importScripts","pending","addEventListener","data","vscodeSetImmediateId","candidate","id","splice","callback","lastId","myId","_promise","Promise","resolve","then","getAllMethodNames","obj","methods","prop","res","proto","getPrototypeOf","getOwnPropertyNames","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","create","setWorkerId","workerId","sendMessage","req","String","reject","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","err","requestMessage","r","detail","transfer","m","ArrayBuffer","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","onmessage","initialize","loaderConfig","hostMethods","hostProxy","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","isHighSurrogate","charCode","isLowSurrogate","fromCharCode","GraphemeBreakTree","_data","static","_INSTANCE","getGraphemeBreakType","codePoint","nodeCount","nodeIndex","numberHash","val","initialHashVal","stringHash","s","hashVal","charCodeAt","leftRotate","bits","totalBits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","Uint8Array","toString","padStart","char","leftPad","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","offset","buffLen","leftoverHighSurrogate","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","j","getUint32","f","k","temp","c","StringDiffSequence","source","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","sequence","elements","_isStringArray","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","l","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","safeProcess","sandboxProcess","arch","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","replace","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_slash","_regexp","URI","schemeOrData","_schemeFix","_referenceResolution","fsPath","with","uriToFsPath","Uri","match","exec","percentDecode","idx","substring","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","toJSON","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","containsPosition","position","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","shouldIgnoreTrimWhitespace","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","chCode","maximumRuntime","startTime","Date","now","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","set","subarray","changeValue","removeValues","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","getIndexOf","sum","low","high","mid","midStop","midStart","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","getText","onEvents","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","insertText","insertLines","split","newLengths","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","_defaultConfig","maxLen","windowSize","timeBudget","getWordAtText","wordDefinition","textOffset","t1","prevRegexIndex","regexIndex","lastIndex","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","_value","get","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","Node","Undefined","prev","_first","_last","_size","size","node","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","pop","anchor","hasPerformanceNow","performance","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","stop","elapsed","Event","event","thisArgs","disposables","didFire","snapshot","each","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","signal","any","events","combinedDisposable","isT","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","chain","fromNodeEventEmitter","eventName","fromDOMEventEmitter","removeEventListener","toPromise","EventProfiling","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","listenerCount","_stopWatch","info","toFixed","options","_disposed","_options","_leakageMon","_perfMon","_profName","_event","_listeners","firstListener","remove","onListenerDidAdd","removeMonitor","check","_b","_deliveryQueue","_c","_d","_e","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyCodeUtils","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlayHintKind","InlineCompletionTriggerKind","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","key","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","sel","direction","KeyMod","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","global","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","content","ranges","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","lineLength","isIPosition","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","all","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","ignoreTrimWhitespace","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","sort","compareRangesUsingStarts","_diffLimit","editOffset","lift","newEdit","computeLinks","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","_suggestionsLimit","duration","computeWordRanges","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","ctx","fhr","getMirrorModels","fmr","monaco","editor","languages","CancellationTokenSource","parent","_token","_parentListener","token","Token","_tokenBrand","initialized","foreignModule","simpleWorker"],"sourceRoot":""}